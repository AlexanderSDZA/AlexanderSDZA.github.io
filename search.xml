<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue学习001</title>
    <url>/2020/01/04/Vue001/</url>
    <content><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><blockquote>
<p><a href="https://cn.vuejs.org/" title="渐进式JavaScript框架" target="_blank" rel="noopener">Vue</a> (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。</p>
<p>另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。如果你想在深入学习 Vue 之前对它有更多了解，我们制作了一个视频，带您了解其核心概念和一个示例工程。</p>
<p>如果你已经是有经验的前端开发者，想知道 Vue 与其它库/框架有哪些区别，请查看对比其它框架。</p>
</blockquote>
<hr>
# 2. 安装 #

<blockquote>
<p>对于制作原型或学习，你可以这样使用最新版本： </p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>对于生产环境，我们推荐链接到一个明确的版本号和构建文件，以避免新版本造成的不可预期的破坏 :</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.6.12"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果你使用原生 ES Modules，这里也有一个兼容 ES Module 的构建文件：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span></span><br><span class="line">import Vue from 'https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.esm.browser.js'</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
# 3.  起步

<blockquote>
<p>尝试 Vue.js 最简单的方法是使用 <a href="https://codesandbox.io/s/github/vuejs/vuejs.org/tree/master/src/v2/examples/vue-20-hello-world" target="_blank" rel="noopener">Hello World 例子</a>。你可以在浏览器新标签页中打开它，跟着例子学习一些基础用法。或者你也可以<a href="https://github.com/vuejs/vuejs.org/blob/master/src/v2/examples/vue-20-hello-world/index.html" target="_blank" rel="noopener">创建一个 <code>.html</code> 文件</a>，然后通过如下方式引入 Vue：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>或者：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://cn.vuejs.org/guide/installation.html" target="_blank" rel="noopener">安装教程</a>给出了更多安装 Vue 的方式。请注意我们<strong>不推荐</strong>新手直接使用 <code>vue-cli</code>，尤其是在你还不熟悉基于 Node.js 的构建工具时。</p>
<p>如果你喜欢交互式的东西，你也可以查阅<a href="https://scrimba.com/g/gvuedocs" target="_blank" rel="noopener">这个 Scrimba 上的系列教程</a>，它揉合了录屏和代码试验田，并允许你随时暂停和播放。</p>
</blockquote>
]]></content>
      <categories>
        <category>Html</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建博客心得</title>
    <url>/2019/03/27/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h1 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown :"></a>MarkDown :</h1><h2 id="MarkDown介绍"><a href="#MarkDown介绍" class="headerlink" title="MarkDown介绍"></a>MarkDown介绍</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p>
<p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p>
<p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p>
<p>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p>
<footer><strong>呆子</strong><cite><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">MarkDown教程|菜鸟教程</a></cite></footer></blockquote>

<h2 id="MarkDown语法手册"><a href="#MarkDown语法手册" class="headerlink" title="MarkDown语法手册"></a>MarkDown语法手册</h2><blockquote><p>Markdown 是一种轻量级标记语言，能将文本换成有效的XHTML(或者HTML)文档，它的目标是实现易读易写，成为一种适用于网络的书写语言。</p>
<p>Markdown 语法简洁明了，易于掌握，所以用它来写作是件既效率又舒服的事情。我们所熟知的和一些大型CMS，如Joomla!、Drupal等都能很好的支持Markdown。我是因为写GitHub项目库中的Readme才开始接触Markdown。</p>
<p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>
<footer><strong>蓝色梦想</strong><cite><a href="https://www.bluesdream.com/blog/markdown-cheatsheet-syntax-manual.html" target="_blank" rel="noopener">MarkDown语法手册</a></cite></footer></blockquote>

<hr>



<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="Hexo开发常用命令"><a href="#Hexo开发常用命令" class="headerlink" title="Hexo开发常用命令"></a>Hexo开发常用命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`$ hexo new [layout] &lt;title&gt;`</span><br></pre></td></tr></table></figure>

<blockquote><p>示例 : hexo new “hello world(文章名称)”</p>
<p>生成对应的md文档:</p>
<p>其中Front-matter是文件最上方的如下部分:</p>
<p><img src="/images/00000/1585289496761.png" alt></p>
<p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p>
<p><img src="/images/00000/1585289761660.png" alt></p>
<p>分类和标签:只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p>
<p> categories:- Diarytags:- PS3- Games</p>
<p>注意:</p>
<p><img src="/images/00000/1585290145157.png" alt></p>
<p><img src="/images/00000/1585290429395.png" alt></p>
<footer><strong>呆子</strong><cite><a href="https://hexo.io/zh-cn/docs" target="_blank" rel="noopener">Hexo开发文档</a></cite></footer></blockquote>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><blockquote>
<p>在文件目录下运行,如:   XXXX/XXXXX/XXXX/Blog</p>
</blockquote>
<blockquote>
<p>1,  $ hexo s<br>    运行hexo在本机,通过访问 <a href="http://localhost:4000查看博客" target="_blank" rel="noopener">http://localhost:4000查看博客</a><br>2,  $ hexo clean<br>    清除生成的文件<br>3,  $ hexo g<br>    生成文件<br>4,  $ hexo d<br>    部署在服务器<br>5,  $ hexo p<br>    推送到服务器<br>6,  $ hexo new<br>    生成新的文件</p>
</blockquote>
]]></content>
  </entry>
</search>
